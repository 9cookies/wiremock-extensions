<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ninecookies.wiremock.extensions</groupId>
	<artifactId>wiremock-extensions</artifactId>
	<version>0.0.7-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Wiremock Extensions</name>
	<description>Provides wiremock extensions for dynamic mocking of JSON responses.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>

		<java.version>1.8</java.version>

		<wiremock.version>2.26.0</wiremock.version>
		<jsonpath.version>2.4.0</jsonpath.version>
		<jackson.version>2.10.2</jackson.version>
		<slf4j.version>1.7.30</slf4j.version>
		<log4j.version>2.13.0</log4j.version>
		<log4j2-logstash.version>1.0.1</log4j2-logstash.version>
		<httpclient.version>4.5.11</httpclient.version>

		<testng.version>6.14.3</testng.version>
		<assertj.version>3.8.0</assertj.version>
		<restassured.version>2.9.0</restassured.version>
	</properties>

	<scm>
		<connection>scm:git:ssh://github.com/9cookies/wiremock-extensions.git</connection>
		<developerConnection>scm:git:ssh://github.com/9cookies/wiremock-extensions.git</developerConnection>
		<url>https://github.com/9cookies/wiremock-extensions</url>
	</scm>

	<distributionManagement>
		<repository>
			<id>local-releases</id>
			<name>Local Release Repository</name>
			<url>file://${project.build.directory}/mvn-repo/releases</url>
		</repository>
		<snapshotRepository>
			<id>local-snapshots</id>
			<name>Local Snapshot Repository</name>
			<url>file://${project.build.directory}/mvn-repo/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- used to find replacements by their defined JSON paths from response -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${jsonpath.version}</version>
		</dependency>
		<!-- used to simulate callback requests -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<!-- logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vlkan.log4j2</groupId>
			<artifactId>log4j2-logstash-layout</artifactId>
			<version>${log4j2-logstash.version}</version>
		</dependency>

		<!-- provided dependencies -->
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<version>${wiremock.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${restassured.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>json-path</artifactId>
			<version>${restassured.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>${restassured.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>*</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<!-- this plug-in has issues with username / author / committer / whatever 
					property/name is null might be see https://github.com/github/maven-plugins/issues/85 
					final solution was to configure user name on github account profile. -->
				<configuration>
					<repositoryOwner>9cookies</repositoryOwner>
					<repositoryName>mvn-repo</repositoryName>
					<server>github</server>
					<branch>refs/heads/master</branch>
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
					<merge>true</merge>
					<message>Maven artifacts for
						${project.artifactId}.${project.version}</message>
					<includes>
						<include>**/*</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[3.2.5,)</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${java.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- assemble jar including dependencies -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<finalName>${project.artifactId}-${project.version}</finalName>
				</configuration>
				<executions>
					<execution>
						<id>assemble-jar-with-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
